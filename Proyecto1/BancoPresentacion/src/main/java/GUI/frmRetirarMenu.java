/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import com.mycompany.bancodominio.Cliente;
import com.mycompany.bancodominio.Cuenta;
import com.mycompany.banconegocio.Controlador.Control;
import com.mycompany.bancopersistencia.DTOS.RetiroDTO;
import com.mycompany.bancopersistencia.DTOS.TransferenciaDTO;
import com.mycompany.bancopersistencia.excepciones.persistenciaException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author yohan
 */
public class frmRetirarMenu extends javax.swing.JFrame {
    Cliente cliente;
    Cuenta cuenta;
    Control controlador;
    List<Cuenta> listaCuentas;
  
    
    /**
     * Creates new form frmDepositar
     */
    public frmRetirarMenu() {
        initComponents();
    }
    
    public frmRetirarMenu(Cliente cliente) {
        initComponents();
        this.cliente=cliente;
        controlador = new Control();
        try {
            listaCuentas = new ArrayList<>(controlador.mostrarCuentasDeCliente(cliente.getIdCliente()));
        } catch (persistenciaException ex) {
            Logger.getLogger(frmRetirarMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        cargarListaCuentas();
    }
    
    private void cargarListaCuentas(){
        for (int i = 0; i < listaCuentas.size(); i++) {
            comboBoxCuenta.addItem(listaCuentas.get(i).getNumeroCuenta());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxCuenta = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        textSaldo = new javax.swing.JTextField();
        textMonto = new javax.swing.JTextField();
        botonContinuar = new javax.swing.JButton();
        botonRegresar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        comboBoxCuenta.setBackground(new java.awt.Color(153, 204, 255));
        comboBoxCuenta.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxCuentaItemStateChanged(evt);
            }
        });
        getContentPane().add(comboBoxCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, 450, 50));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("$");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 240, -1, 50));

        textSaldo.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        textSaldo.setForeground(new java.awt.Color(102, 102, 102));
        textSaldo.setToolTipText("");
        textSaldo.setBorder(null);
        textSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSaldoActionPerformed(evt);
            }
        });
        textSaldo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textSaldoKeyTyped(evt);
            }
        });
        getContentPane().add(textSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 240, 410, 50));

        textMonto.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        textMonto.setForeground(new java.awt.Color(102, 102, 102));
        textMonto.setToolTipText("");
        textMonto.setBorder(null);
        textMonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textMontoActionPerformed(evt);
            }
        });
        getContentPane().add(textMonto, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 360, 430, 50));

        botonContinuar.setContentAreaFilled(false);
        botonContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonContinuarActionPerformed(evt);
            }
        });
        getContentPane().add(botonContinuar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 520, 480, 60));

        botonRegresar.setContentAreaFilled(false);
        botonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(botonRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 650, 200, 70));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RetiroSinCuenta-Menu.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-30, -20, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSaldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSaldoActionPerformed

    private void textMontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textMontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textMontoActionPerformed

    
    //Admite solo valores numericos
    private void textSaldoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textSaldoKeyTyped
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57;
        if(!numero){
            evt.consume();
        }
    }//GEN-LAST:event_textSaldoKeyTyped

    private void botonContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonContinuarActionPerformed
        for (int i = 0; i < listaCuentas.size(); i++) {
            if(listaCuentas.get(i).getNumeroCuenta().equalsIgnoreCase((String) comboBoxCuenta.getSelectedItem())){
                cuenta= listaCuentas.get(i);
                break;
            }
        }
        try {
            RetiroDTO retiro = new RetiroDTO();
            retiro.setCuenta((String) comboBoxCuenta.getSelectedItem());
            retiro.setMonto(Integer.parseInt(textMonto.getText()));

            boolean validacion = controlador.crearRetiro(retiro);

            if (validacion) {
                frmRetirarMenuExito frmRetirarMenuExito = new frmRetirarMenuExito(cliente, retiro);
                frmRetirarMenuExito.setVisible(true);
                this.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(null, "No se logrÃ³ hacer el retiro", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonContinuarActionPerformed

    private void botonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegresarActionPerformed
        frmMenuUsuario frmMenuUsuario = new frmMenuUsuario(cliente);
        frmMenuUsuario.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_botonRegresarActionPerformed

    private void comboBoxCuentaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxCuentaItemStateChanged
        // Obtener el valor seleccionado del ComboBox
        String seleccion = (String) comboBoxCuenta.getSelectedItem();
        // Actualizar el contenido del TextField con el valor seleccionado del ComboBox
        for (int i = 0; i < listaCuentas.size(); i++) {
            if(seleccion.equalsIgnoreCase(listaCuentas.get(i).getNumeroCuenta())){
                textSaldo.setText(String.valueOf(listaCuentas.get(i).getSaldo()));
            }
        }
    }//GEN-LAST:event_comboBoxCuentaItemStateChanged

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonContinuar;
    private javax.swing.JButton botonRegresar;
    private javax.swing.JComboBox<String> comboBoxCuenta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField textMonto;
    private javax.swing.JTextField textSaldo;
    // End of variables declaration//GEN-END:variables
}
